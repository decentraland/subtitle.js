<<<<<<< HEAD
import { Node, SubtitleStream } from './types'
import { createDuplex } from './utils'

/**
 * @public
 */
export const filter = (callback: (node: Node) => boolean): SubtitleStream =>
  createDuplex({
    write(chunk, _encoding, next) {
      if (callback(chunk)) {
        this.push(chunk)
      }
      next()
=======
import { Node } from '.'
import { Transform } from 'stream'

export const filter = (callback: (node: Node) => boolean) =>
  new Transform({
    objectMode: true,
    autoDestroy: false,
    transform: function transform(chunk, _encoding, next) {
      callback(chunk) ? next(null, chunk) : next()
>>>>>>> original/master
    }
  })
